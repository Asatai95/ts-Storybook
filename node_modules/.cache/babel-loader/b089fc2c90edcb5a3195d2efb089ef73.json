{"ast":null,"code":"var _jsxFileName = \"/Users/asatai/Desktop/dev/storybook/src/stories/Button.stories.tsx\";\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React from \\\"react\\\"\\nimport { Button } from './Button';\\nimport { Meta, Story } from '@storybook/react';\\nimport imageFile from '../images/apple-touch-icon.png';\\n\\nconst meta: Meta = {\\n    title: 'Button',\\n    component: Button,\\n    argTypes: {\\n        size: {\\n            options: ['small', 'large'],\\n            control: {type: 'select'}\\n        },\\n        backgroundColor: {\\n            control: {type: 'color'}\\n        }\\n    },\\n    parameters: {\\n        backgrounds: {\\n            values: [\\n                { name: 'red', value: '#f00' },\\n                { name: 'green', value: '#0f0' },\\n                { name: 'blue', value: '#00f' },\\n            ]\\n        }\\n    },\\n};\\n\\ntype TButton = {\\n    primary: boolean,\\n    label: string,\\n    size: string,\\n    backgroundColor: string\\n}\\n\\nconst image = {\\n    src: imageFile,\\n    alt: 'my image',\\n};\\n\\nexport const withAnImage = () => <img src={image.src} alt={image.alt} />;\\n\\nconst Template: Story<TButton> = (args) => <Button {...args} />;\\n\\nexport const Primary = Template.bind({});\\nPrimary.args = {\\n    primary: true,\\n    label: 'primary',\\n    size: 'small',\\n};\\n\\nexport const Secondary = Template.bind({});\\nSecondary.args = {\\n    ...Primary.args,\\n    primary: false,\\n    label: 'secondary',\\n}\\n\\nexport const Default = Template.bind({});\\nDefault.args = {\\n    ...Primary.args,\\n    label: 'default'\\n}\\n\\n\\nexport default meta;\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"withAnImage\": {\n    \"startLoc\": {\n      \"col\": 27,\n      \"line\": 41\n    },\n    \"endLoc\": {\n      \"col\": 72,\n      \"line\": 41\n    },\n    \"startBody\": {\n      \"col\": 27,\n      \"line\": 41\n    },\n    \"endBody\": {\n      \"col\": 72,\n      \"line\": 41\n    }\n  },\n  \"Primary\": {\n    \"startLoc\": {\n      \"col\": 33,\n      \"line\": 43\n    },\n    \"endLoc\": {\n      \"col\": 63,\n      \"line\": 43\n    },\n    \"startBody\": {\n      \"col\": 33,\n      \"line\": 43\n    },\n    \"endBody\": {\n      \"col\": 63,\n      \"line\": 43\n    }\n  },\n  \"Secondary\": {\n    \"startLoc\": {\n      \"col\": 33,\n      \"line\": 43\n    },\n    \"endLoc\": {\n      \"col\": 63,\n      \"line\": 43\n    },\n    \"startBody\": {\n      \"col\": 33,\n      \"line\": 43\n    },\n    \"endBody\": {\n      \"col\": 63,\n      \"line\": 43\n    }\n  },\n  \"Default\": {\n    \"startLoc\": {\n      \"col\": 33,\n      \"line\": 43\n    },\n    \"endLoc\": {\n      \"col\": 63,\n      \"line\": 43\n    },\n    \"startBody\": {\n      \"col\": 33,\n      \"line\": 43\n    },\n    \"endBody\": {\n      \"col\": 63,\n      \"line\": 43\n    }\n  }\n};\nimport React from \"react\";\nimport { Button } from './Button';\nimport imageFile from '../images/apple-touch-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst meta = {\n  title: 'Button',\n  component: Button,\n  argTypes: {\n    size: {\n      options: ['small', 'large'],\n      control: {\n        type: 'select'\n      }\n    },\n    backgroundColor: {\n      control: {\n        type: 'color'\n      }\n    }\n  },\n  parameters: {\n    backgrounds: {\n      values: [{\n        name: 'red',\n        value: '#f00'\n      }, {\n        name: 'green',\n        value: '#0f0'\n      }, {\n        name: 'blue',\n        value: '#00f'\n      }]\n    }\n  }\n};\nconst image = {\n  src: imageFile,\n  alt: 'my image'\n};\nexport const withAnImage = () => /*#__PURE__*/_jsxDEV(\"img\", {\n  src: image.src,\n  alt: image.alt\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 34\n}, this);\n;\n\nconst Template = args => /*#__PURE__*/_jsxDEV(Button, { ...args\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 44\n}, this);\n\n_c = Template;\nexport const Primary = Template.bind({});\n;\nPrimary.args = {\n  primary: true,\n  label: 'primary',\n  size: 'small'\n};\nexport const Secondary = Template.bind({});\n;\nSecondary.args = { ...Primary.args,\n  primary: false,\n  label: 'secondary'\n};\nexport const Default = Template.bind({});\nDefault.args = { ...Primary.args,\n  label: 'default'\n};\nexport default meta;\nwithAnImage.parameters = {\n  storySource: {\n    source: \"() => <img src={image.src} alt={image.alt} />\"\n  },\n  ...withAnImage.parameters\n};\nPrimary.parameters = {\n  storySource: {\n    source: \"(args) => <Button {...args} />\"\n  },\n  ...Primary.parameters\n};\nSecondary.parameters = {\n  storySource: {\n    source: \"(args) => <Button {...args} />\"\n  },\n  ...Secondary.parameters\n};\nDefault.parameters = {\n  storySource: {\n    source: \"(args) => <Button {...args} />\"\n  },\n  ...Default.parameters\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Template\");","map":{"version":3,"sources":["/Users/asatai/Desktop/dev/storybook/src/stories/Button.stories.tsx"],"names":["__STORY__","__LOCATIONS_MAP__","React","Button","imageFile","meta","title","component","argTypes","size","options","control","type","backgroundColor","parameters","backgrounds","values","name","value","image","src","alt","withAnImage","Template","args","Primary","bind","primary","label","Secondary","Default","storySource","source"],"mappings":"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","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\"\\nimport { Button } from './Button';\\nimport { Meta, Story } from '@storybook/react';\\nimport imageFile from '../images/apple-touch-icon.png';\\n\\nconst meta: Meta = {\\n    title: 'Button',\\n    component: Button,\\n    argTypes: {\\n        size: {\\n            options: ['small', 'large'],\\n            control: {type: 'select'}\\n        },\\n        backgroundColor: {\\n            control: {type: 'color'}\\n        }\\n    },\\n    parameters: {\\n        backgrounds: {\\n            values: [\\n                { name: 'red', value: '#f00' },\\n                { name: 'green', value: '#0f0' },\\n                { name: 'blue', value: '#00f' },\\n            ]\\n        }\\n    },\\n};\\n\\ntype TButton = {\\n    primary: boolean,\\n    label: string,\\n    size: string,\\n    backgroundColor: string\\n}\\n\\nconst image = {\\n    src: imageFile,\\n    alt: 'my image',\\n};\\n\\nexport const withAnImage = () => <img src={image.src} alt={image.alt} />;\\n\\nconst Template: Story<TButton> = (args) => <Button {...args} />;\\n\\nexport const Primary = Template.bind({});\\nPrimary.args = {\\n    primary: true,\\n    label: 'primary',\\n    size: 'small',\\n};\\n\\nexport const Secondary = Template.bind({});\\nSecondary.args = {\\n    ...Primary.args,\\n    primary: false,\\n    label: 'secondary',\\n}\\n\\nexport const Default = Template.bind({});\\nDefault.args = {\\n    ...Primary.args,\\n    label: 'default'\\n}\\n\\n\\nexport default meta;\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"withAnImage\":{\"startLoc\":{\"col\":27,\"line\":41},\"endLoc\":{\"col\":72,\"line\":41},\"startBody\":{\"col\":27,\"line\":41},\"endBody\":{\"col\":72,\"line\":41}},\"Primary\":{\"startLoc\":{\"col\":33,\"line\":43},\"endLoc\":{\"col\":63,\"line\":43},\"startBody\":{\"col\":33,\"line\":43},\"endBody\":{\"col\":63,\"line\":43}},\"Secondary\":{\"startLoc\":{\"col\":33,\"line\":43},\"endLoc\":{\"col\":63,\"line\":43},\"startBody\":{\"col\":33,\"line\":43},\"endBody\":{\"col\":63,\"line\":43}},\"Default\":{\"startLoc\":{\"col\":33,\"line\":43},\"endLoc\":{\"col\":63,\"line\":43},\"startBody\":{\"col\":33,\"line\":43},\"endBody\":{\"col\":63,\"line\":43}}};\n    \nimport React from \"react\"\nimport { Button } from './Button';\nimport { Meta, Story } from '@storybook/react';\nimport imageFile from '../images/apple-touch-icon.png';\n\nconst meta: Meta = {\n    title: 'Button',\n    component: Button,\n    argTypes: {\n        size: {\n            options: ['small', 'large'],\n            control: {type: 'select'}\n        },\n        backgroundColor: {\n            control: {type: 'color'}\n        }\n    },\n    parameters: {\n        backgrounds: {\n            values: [\n                { name: 'red', value: '#f00' },\n                { name: 'green', value: '#0f0' },\n                { name: 'blue', value: '#00f' },\n            ]\n        }\n    },\n};\n\ntype TButton = {\n    primary: boolean,\n    label: string,\n    size: string,\n    backgroundColor: string\n}\n\nconst image = {\n    src: imageFile,\n    alt: 'my image',\n};\n\nexport const withAnImage = () => <img src={image.src} alt={image.alt} />;;\n\nconst Template: Story<TButton> = (args) => <Button {...args} />;\n\nexport const Primary = Template.bind({});;\nPrimary.args = {\n    primary: true,\n    label: 'primary',\n    size: 'small',\n};\n\nexport const Secondary = Template.bind({});;\nSecondary.args = {\n    ...Primary.args,\n    primary: false,\n    label: 'secondary',\n}\n\nexport const Default = Template.bind({});\nDefault.args = {\n    ...Primary.args,\n    label: 'default'\n}\n\n\nexport default meta;\n\n\nwithAnImage.parameters = { storySource: { source: \"() => <img src={image.src} alt={image.alt} />\" }, ...withAnImage.parameters };\nPrimary.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Primary.parameters };\nSecondary.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Secondary.parameters };\nDefault.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Default.parameters };"]},"metadata":{},"sourceType":"module"}