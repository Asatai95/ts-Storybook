"use strict";

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.string.replace");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generateUrl = void 0;

var sanitizeUrl = function sanitizeUrl(url) {
  return url && url[url.length - 1] === '/' ? url.slice(0, -1) : url;
};

var sanitizePath = function sanitizePath(path) {
  return path[0] === '/' ? path : "".concat(path ? "/".concat(path) : '');
};

var generateUrl = function generateUrl(results) {
  var _results$storyPath = results.storyPath,
      storyPath = _results$storyPath === void 0 ? '' : _results$storyPath,
      _results$componentPat = results.componentPath,
      componentPath = _results$componentPat === void 0 ? '' : _results$componentPat,
      _results$workingDir = results.workingDir,
      workingDir = _results$workingDir === void 0 ? '' : _results$workingDir,
      _results$repository = results.repository,
      repository = _results$repository === void 0 ? '' : _results$repository,
      branch = results.branch;

  if (!workingDir) {
    console.warn('Set a Global parameter of your working directory in .storybook/preview.js. Refer docs for more details');
    return;
  }

  var storyPathFromRoot = sanitizePath(storyPath.replace(workingDir, ''));
  var componentPathFromRoot = sanitizePath(componentPath.replace(workingDir, ''));

  if (process.env.NODE_ENV === 'development') {
    // For developmemnt open VS code
    if (componentPathFromRoot) return "vscode://file".concat(workingDir).concat(componentPathFromRoot);
    return "vscode://file".concat(workingDir).concat(storyPathFromRoot.replace('.stories', ''));
  } // For production open github repo


  if (!repository) {
    console.warn('Set a Global parameter of your Git repository in .storybook/preview.js. Refer docs for more details');
    return;
  }

  if (componentPathFromRoot) return "".concat(sanitizeUrl(repository), "/tree/").concat(branch || 'master').concat(componentPathFromRoot);
  return "".concat(sanitizeUrl(repository), "/tree/").concat(branch || 'master').concat(storyPathFromRoot.replace('.stories', ''));
};

exports.generateUrl = generateUrl;